apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-meta
  labels:
    app: prometheus-meta
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
        prometheus: meta
    spec:
      containers:
      - image: quay.io/fabxc/prometheus:v1.5.1
        args: [
          "-config.file=/etc/prometheus/config/prometheus.yaml",
          "-storage.local.retention=360h",
          "-storage.local.memory-chunks=50000",
          "-storage.local.max-chunks-to-persist=25000",
        ]
        name: prometheus
        resources:
          requests:
            memory: 600Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/config
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-meta
      terminationGracePeriodSeconds: 300
      nodeSelector:
        isolation: none
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-meta
  labels:
    prometheus: meta
    app: prometheus
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: prometheus
    port: 9090
  selector:
    app: prometheus
    prometheus: meta
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-meta
data:
  prometheus.yaml: |
    global:
      scrape_interval: 5s
    scrape_configs:
    - job_name: kubelets
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
    # Scrapes the endpoint lists for the main Prometheus endpoints
    - job_name: endpoints
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_service_label_app]
        regex: prometheus|node-exporter
      - action: replace
        source_labels: [__meta_kubernetes_service_label_app]
        target_label: job
      - action: replace
        target_label: prometheus
        source_labels: [__meta_kubernetes_service_label_prometheus]